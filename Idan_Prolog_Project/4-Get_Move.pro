
%% קבל מהלך
%% --------
%%
%% כותב	: עידן משיח.

צבע(שחור).
צבע(לבן).



%% סוג_שחקן(_שם, _סוג_וממשק).
%%===========================


%% סוג_שחקן(לבן, אנושי(טקסט)).
%% סוג_שחקן(שחור, אנושי(טקסט)).

%% סוג_שחקן(לבן, אנושי(גרפי)).
%% סוג_שחקן(שחור, אנושי(גרפי)).

%% סוג_שחקן(לבן , מחשב(0)).
%% סוג_שחקן(שחור, מחשב(0)).

%% סוג_שחקן(לבן , מחשב(1)).
%% סוג_שחקן(שחור, מחשב(1)).

%% סוג_שחקן(לבן , מחשב(2)).
%% סוג_שחקן(שחור, מחשב(2)).

%% סוג_שחקן(לבן , מחשב(3)).
%% סוג_שחקן(שחור, מחשב(3)).

%% סוג_שחקן(לבן , מחשב(4)).
%% סוג_שחקן(שחור, מחשב(4)).



%%======================================================
%%=============== החוק הראשי בקובץ זה: =================
%%======================================================

 
קבל_מהלך(_מצב, _מהלך):- 

		 קבל_מהלך_מממשק_שחקן(_מצב, _מהלך),

                 מהלך_אפשרי(_מצב, _מהלך),
		 1 = 1, !.


%%======================================================
%%==================== לשחקן אנושי =====================
%%======================================================


קבל_מהלך_מממשק_שחקן(_מצב, _מהלך):-		

		אחזר_תור_מי(_מצב, _שחקן),
				 
		סוג_שחקן( _שחקן , אנושי(_ממשק)),
		
		קבל_מהלך_מממשק( _ממשק, _מצב, _מהלך ),!.		 
								



%%=====================================================
%======================================================


קבל_מהלך_מממשק(גרפי, _מצב, _מהלך ):-
				אחזר_תור_מי(_מצב, _שחקן),				 
				סוג_שחקן( _שחקן , אנושי(גרפי)),
				הסר_כל(נקלט_מהלך(_)),

				חזור,
		  	     		המתן(1),
				נקלט_מהלך(_מהלך),!,			%% התוכנית "תקועה" בלולאה עד אשר יופיע  'נקלט_מהלך(_מהלך)'			  
									%% 'נקלט_מהלך(_מהלך)' - יופיע מהפונקציה הדינמית, כאשר היא "תרגיש" לחיצה.
									%% _מהלך יכול להיות מהלך משחק רגיל או
									%% לחיצה על כפתור המלצה או לחיצה על כפתור יציאה.
				מהלך_אפשרי(_מצב, _מהלך).


%%=====================================================
%%=====================================================
%%=====================================================


קבל_מהלך_מממשק(טקסט, _מצב, _מהלך ):-
				_מהלך = מהלך(משבצת(_שורה,_טור)),
				_מצב = מצב(_צבע, _לוח),
				 
				 שורה,
                                 כתוב(' הקש מיקום יעד לכלי'),
                                 שורה,
                                 כתוב('שורה : '),
                                 שורה,
                                 קרא(_שורה),
                                 כתוב('טור: '),
                                 שורה,
                                 קרא(_טור),
                                 שורה, שורה.
                                       


%% מהלך ייחשב למהלך אפשרי אם נלחצה משבצת חוקית או נלחץ אחד הכפתורים המותרים.
%% ==========================================================================

%% מהלכים אפשריים...
%% ==================

מהלך_אפשרי(_מצב, יציאה).			

מהלך_אפשרי(_מצב, המלצה).                     
		
מהלך_אפשרי(_מצב, משחק_חדש).

מהלך_אפשרי(_מצב, הוראות).

מהלך_אפשרי(_מצב, שמירה).

מהלך_אפשרי(_מצב, חזור).

מהלך_אפשרי(_מצב, טען_משחק).



%% מהלך ייחשב למהלך אפשרי אם נבחרה משבצת חוקית 
%% ============================================


% מהלך_אפשרי(מצב(_צבע,_לוח), _מהלך)
%% ==================================



%% כאשר הוא מקבל מהלך מהטקסט

מהלך_אפשרי(_מצב, _מהלך):-
                        _מהלך = מהלך(_משבצת),
			מהלך_חוקי(_מצב, _מהלך), !.



%% כאשר הוא מקבל מהלך מהגרפי
מהלך_אפשרי(_מצב, _מהלך):-
                        _מהלך = _משבצת,
			_מהלך_חדש = מהלך(_משבצת),
			מהלך_חוקי(_מצב, _מהלך_חדש).



% מהלך ייחשב למהלך חוקי אם המשבצת שנבחרה נמצאת על הלוח, אם משבצת במשבצת המוצא יש כלי מצבע החשקן ואם במשבצת המטרה אין אף כלי.
%% =========================================================================================================================


מהלך_חוקי(_מצב, _מהלך):-
	_מצב  = מצב( _צבע, _לוח ),
	_מהלך = מהלך(_משבצת),			

	אחזר_משבצת_חוקית(_משבצת),
	לא חבר( כלי(_ , _משבצת), _לוח ),
			
        שחקן_נגדי(_צבע,_צבע_יריב),
	לא כלי_אויב_צמוד(_משבצת,_צבע_יריב, _לוח).


%%=================================================================================================

כלי_אויב_צמוד(_משבצת,_צבע_יריב, _לוח):-
                        תוספת_רגילה(_כיוון,_,_),
			   משבצת_שכנה_בכיוון(_משבצת, _משבצת_בבדיקה, _כיוון),
		        חבר(כלי(_צבע_יריב , _משבצת_בבדיקה), _לוח ).




%% בודק מהו הכיוון היחסי בין משבצת המוצא למשבצת המטרה. הכיוונים האפשריים הם: [1,2,3,4,6,7,8,9].
%% ============================================================================================

משבצת_שכנה_בכיוון(_ממשבצת, _משבצת_שכנה, _כיוון):-
		לא משתנה(_ממשבצת),
		_ממשבצת     = משבצת(_משורה, _מעמודה),
		_משבצת_שכנה = משבצת(_שורה_חדשה, _עמודה_חדשה),

		תוספת_רגילה(_כיוון, _תוספת_לטור, _תוספת_לשורה),
		
		_שורה_חדשה   הוא  _משורה  +  _תוספת_לשורה,
		_עמודה_חדשה  הוא  _מעמודה +  _תוספת_לטור.


משבצת_שכנה_בכיוון(_ממשבצת, _משבצת_שכנה, _כיוון):-
		לא משתנה(_משבצת_שכנה),
		_ממשבצת     = משבצת(_משורה, _מעמודה),
		_משבצת_שכנה = משבצת(_שורה_חדשה, _עמודה_חדשה),

		תוספת_רגילה(_כיוון, _תוספת_לטור, _תוספת_לשורה),
		
		_משורה הוא _שורה_חדשה -  _תוספת_לשורה,
		_מעמודה הוא _עמודה_חדשה -  _תוספת_לטור.


/*
הכיוון מוגדר לפי המקלדת.  
	9  8  7
	6  5  4
	3  2  1

מסתכלים על תא מספר 5 ועל האופן בו מודפס הלוח שלנו.
הלוח ממוספר מימין לשמאל ומלמעלה כלפי מטה:
		  1  2  3  4  .....
		1
		2
		3
		.
		.

לכן התוספות מתבצעות בצורה הבאה:
*/


%================================================

%% תוספת(_כיוון, _תוספת_לטור, _תוספת_לשורה).
%% =========================================

תוספת_הפוכה(8, 0, -2).

תוספת_רגילה(9, -1, -1).

תוספת_הפוכה(3, -1, 1).

תוספת_רגילה(2, 0, 2).

תוספת_הפוכה(1, 1, 1).

תוספת_רגילה(7, 1, -1).


%%%=============================================================


%% משבצת נחשבת לחוקית  אם היא בגבולות הלוח.
%% ========================================

משבצת_חוקית(משבצת(_שורה, _טור)):-
		גודל_לוח(_שורות, _טורים),
                _טורים_בבדיקה הוא ((_טורים+1)//2),
                חלק_ושארית(_טורים_בבדיקה, 2, _,1),
		בין_מספרים(1, _טור , _טורים),  
			בין_מספרים(1, _שורה, _שורות),
                        _סכום הוא _טור + _שורה,
                        חלק_ושארית(_סכום, 2, _, 0),
                 משבצת_למשושה(משבצת(_שורה,_טור)), !.


משבצת_חוקית(משבצת(_שורה, _טור)):-
		גודל_לוח(_שורות, _טורים),
                _טורים_בבדיקה הוא ((_טורים+1)//2),
                חלק_ושארית(_טורים_בבדיקה, 2, _,0),
		בין_מספרים(1, _טור , _טורים),  
			בין_מספרים(1, _שורה, _שורות),
                        _סכום הוא _טור + _שורה,
                        חלק_ושארית(_סכום, 2, _, 1),
                 משבצת_למשושה(משבצת(_שורה,_טור)), !.



אחזר_משבצת_חוקית(משבצת(_שורה, _עמודה)):-
                 גודל_לוח(_שורות, _עמודות),
                 בין_מספרים(1 , _שורה, _שורות),				
	         	בין_מספרים(1 , _עמודה, _עמודות), 
                            משבצת_חוקית(משבצת(_שורה,_עמודה)).



משבצת_למשושה(משבצת(_שורה,_טור)):-
                                גודל_לוח(_שורות, _טורים),
                                _שורה_בעבודה הוא _שורה,
                                _שורות_בעבודה הוא ((_טורים+1)//2),
                                _שורה_בעבודה =< _שורות_בעבודה,
                                _הוספה הוא (_שורה_בעבודה-1),
                                _טור =< ((_טורים //2)+1)+_הוספה,
                                _טור >= ((_טורים //2)+1)-_הוספה.


משבצת_למשושה(משבצת(_שורה,_טור)):-
                                גודל_לוח(_שורות, _טורים),
                                _שורה_בעבודה הוא _שורה,
                                _שורה_בבדיקה הוא (_שורות-_שורה),
                                _שורות_בעבודה הוא ((_טורים+1)//2),

                                _שורה_בעבודה >= _שורות_בעבודה,
                                _שורה_בבדיקה >= _שורות_בעבודה,

                                _הוספה הוא (_שורות_בעבודה-1),
                                _טור =< ((_טורים //2)+1)+_הוספה,
                                _טור >= ((_טורים //2)+1)-_הוספה.



משבצת_למשושה(משבצת(_שורה,_טור)):-
                                גודל_לוח(_שורות, _טורים),
                                _שורה_בעבודה הוא ((_שורות-_שורה)+1),
                                _שורות_בעבודה הוא ((_טורים+1)//2),
                                _שורה_בעבודה =< _שורות_בעבודה,
                                _הוספה הוא (_שורה_בעבודה-1),
                                _טור =< ((_טורים //2)+1)+_הוספה,
                                _טור >= ((_טורים //2)+1)-_הוספה.



%% אם המהלך לא אפשרי אזי יש הודעה.
%% ===============================

מהלך_אפשרי(_מצב, _מהלך):-
		לא  מהלך_חוקי(_מצב, _מהלך),	
                הודעה(' המהלך לא אפשרי, בחר משבצת חדשה'),                               
                הכשל,!.



%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


%% מהלך של שחקן מחשב.
%% ===================


קבל_מהלך_מממשק_שחקן(_מצב, _מהלך):-
		אחזר_תור_מי(_מצב, _שחקן),

		סוג_שחקן( _שחקן , מחשב(_בינה)),	%%<<<<=================================== שחקן ממוחשב!!!

		מהלך_לפי_בינה(_מצב, _בינה, _מהלך),

		כתוב('המחשב בחר במהלך הבא:  _מהלך = '),
		כתוב(_מהלך),
		שורה,

		1 = 1.


%%===============================================================================
%%==================================    ב י נ ה    ==============================
%%===============================================================================


מהלך_לפי_בינה(_מצב, 4, _מהלך):-
				מינימקס(_מצב, 4, _מהלך, _ציון),
                                !.



מהלך_לפי_בינה(_מצב, _בינה, _מהלך):-
		_בינה \= 4,
		מצא_הכל(_משבצת , מהלך_חוקי(_מצב, מהלך(_משבצת)), _מהלכים),  	    %% לשים לב שיהיה משתנה אחר ב-'מצא_הכל/3'           
		ארוז_מהלכים_עם_ציון(_מצב, _בינה, _מהלכים, _מהלכים_עם_ציון),
		בחר_בטוב(_מהלכים_עם_ציון, _מהלך, _ציון),

		שורה,
		כתוב('הציון הוא: '),
		כתוב(_ציון), שורה.



%% ארוז_מהלכים_עם_ציון(_מצב, _בינה, _מהלכים, _מהלכים_עם_ציון)
%% ===========================================================

ארוז_מהלכים_עם_ציון(_מצב, _בינה, [], []).

ארוז_מהלכים_עם_ציון(_מצב, _בינה, [_מהלך|_שאר_מהלכים], [מהלך_עם_ציון(_מהלך, _ציון)|_שאר_עם_ציון]):-			
    						חשב_ציון_למהלך(_מצב, _בינה, _מהלך, _ציון),				
    						ארוז_מהלכים_עם_ציון(_מצב, _בינה, _שאר_מהלכים, _שאר_עם_ציון).




%% בחר_בטוב(_מהלכים_עם_ציון, _מהלך, _ציון)
%%=========================================

%% חוק עצירה - אם יש מהלך אחד אז הוא המהלך הנבחר.
%% ==============================================

בחר_בטוב([מהלך_עם_ציון(_מהלך, _ציון)], _מהלך, _ציון).



%% הרקורסיה - אם יש רשימת מהלכים, אז בוחרים את המהלך הטוב ביותר מהזנב של רשימת המהלכים ומשווים אותו למהלך הראשון. הכי טוב הוא הטוב מבין השניים.
%% ============================================================================================================================================

בחר_בטוב([מהלך_עם_ציון(_מהלך1, _ציון1)|_שאר], _מהלך_טוב, _ציון_טוב):-
    				בחר_בטוב(_שאר, _מהלך2, _ציון2),
    				טוב_מבין_שניים(_מהלך1,_ציון1,_מהלך2,_ציון2,_מהלך_טוב,_ציון_טוב).





%% בחירה של מהלך טוב ביותר בין שני מהלכים.  החלטה שלי (!!!) המהלך הטוב יותר הוא זה שיש לו את הציון הגבוה יותר.
%% ============================================================================================================

%% טוב_מבין_שניים(_מהלך1,_ציון1,_מהלך2,_ציון2,_מהלך_טוב,_ציון_טוב).
%% =================================================================

טוב_מבין_שניים(_מהלך1,_ציון1,_מהלך2,_ציון2,_מהלך1,_ציון1):- _ציון1  > _ציון2.

טוב_מבין_שניים(_מהלך1,_ציון1,_מהלך2,_ציון2,_מהלך2,_ציון2):- _ציון1 =< _ציון2.



%%===============================================================================



%% בינה = 0  >>>> מהלך אקראי.
%% ==========================

%% חשב_ציון_למהלך(_מצב, _בינה, _מהלך, _ציון)
%% =========================================

חשב_ציון_למהלך(_מצב, 0, _מהלך, _ציון):-
				בצע_מהלך(_מצב, _מהלך, _),	%% בשביל ליצור רשימת מושפעים ( אחרת ישאר H ).
    				אקראי(_ציון).



חשב_ציון_למהלך(מצב(_תור,_לוח), _בינה, _מהלך, _ציון):-
    		_בינה > 0,

    		אקראי(_מספר),
	
    		בצע_מהלך(מצב(_תור,_לוח), _מהלך, _מצב_חדש),
	
    		ציון_מצב_לשחקן_לפי_בינה(_בינה, _תור, _מהלך, _מצב_חדש, _ציון_זמני),
		
    		_ציון  הוא  _ציון_זמני + _מספר.



%%===============================================================================
%%===============================================================================
%%===============================================================================


%% ציון_מצב_לשחקן_לפי_בינה(_בינה, _שחקן, _מהלך, _מצב_חדש, _ציון_זמני)
%% ==================================================================



ציון_מצב_לשחקן_לפי_בינה(1, _, _, _מצב, 10000):-
    					בדוק_סוף_משחק(_מצב, _),!.

	


%% במידה והמהלך שהתבצע עכשיו (הצעד האחרון) איננו הצעד המנצח, אז הציון הזמני שלו 0 ובהמשך מתווסף לו ערך אקראי.
%%============================================================================================================

ציון_מצב_לשחקן_לפי_בינה(1, _, _, _, 0).	


%%===============================================================================



%% מהלך של ניצחון
%% --------------
ציון_מצב_לשחקן_לפי_בינה(2, _ , _, _מצב, 10000):-
    				בדוק_סוף_משחק(_מצב, _),!.


%% מהלך של תפיסת מקום
%% ------------------
ציון_מצב_לשחקן_לפי_בינה(2, _שחקן , _מהלך,_מצב, _ציון):-
                                _שחקן = שחור,
				מונה_מקומות(_מצב,_מונה_לבן,_מונה_שחור),
				_ציון = (_מונה_שחור*_מונה_שחור) - (_מונה_לבן*_מונה_לבן).

ציון_מצב_לשחקן_לפי_בינה(2, _שחקן , _מהלך,_מצב, _ציון):-
                                _שחקן = לבן,
				מונה_מקומות(_מצב,_מונה_לבן,_מונה_שחור),
				_ציון = (_מונה_לבן*_מונה_לבן) - (_מונה_שחור*_מונה_שחור).
                                


מונה_מקומות(_מצב,_מונה_לבן,_מונה_שחור):-
	הוסף(משבצות_לבן(0)),
        הוסף(משבצות_שחור(0)),

	גודל_לוח(_שורות, _עמודות),
	בין_מספרים(1 , _שורה, _שורות),		
		בין_מספרים(1 , _עמודה, _עמודות),

			אחזר_שורה_ממשבצת( _משבצת, _שורה ),
			אחזר_טור_ממשבצת( _משבצת, _עמודה ),
					                           	   
                        מקום_לצבע(שחור,_מצב,_משבצת,_מונה_שחור_זמני_ראשון),
                        מקום_לצבע(לבן,_מצב,_משבצת,_מונה_לבן_זמני_ראשון),

			צבע_מייצר_לא_חוקי_לנגדי(שחור,_מצב,_משבצת,_מונה_שחור_זמני_שני),
                        צבע_מייצר_לא_חוקי_לנגדי(לבן,_מצב,_משבצת,_מונה_לבן_זמני_שני),

                        משבצות_לבן(_מונה_לבן_לולאה),
			_מונה_לבן_חדש הוא _מונה_לבן_לולאה + _מונה_לבן_זמני_ראשון + _מונה_לבן_זמני_שני,
			הסר_כל(משבצות_לבן(_)),
			הוסף(משבצות_לבן(_מונה_לבן_חדש)),

                        משבצות_שחור(_מונה_שחור_לולאה),
			_מונה_שחור_חדש הוא _מונה_שחור_לולאה + _מונה_שחור_זמני_ראשון + _מונה_שחור_זמני_שני,
			הסר_כל(משבצות_שחור(_)),
			הוסף(משבצות_שחור(_מונה_שחור_חדש)),
 
		_עמודה = _עמודות,
	_שורה = _שורות,!,
	משבצות_לבן(_מונה_לבן),
	הסר_כל(משבצות_לבן(_)),
        משבצות_שחור(_מונה_שחור),
	הסר_כל(משבצות_שחור(_)),
	1 = 1.



מקום_לצבע(_צבע,_מצב,_משבצת,1):-
                          _מצב = מצב(_,_לוח),
                          חבר( כלי(_צבע , _משבצת), _לוח ),
                          !.

מקום_לצבע(_צבע,_מצב,_משבצת,0).



צבע_מייצר_לא_חוקי_לנגדי(_צבע,_מצב,_משבצת,1):-
					משבצת_חוקית(_משבצת),
                                        _מצב = מצב(_,_לוח),
			                משבצת_שכנה_בכיוון(_משבצת_בבדיקה, _משבצת, _),
		                        חבר(כלי(_צבע , _משבצת_בבדיקה), _לוח ),
                                        !.
צבע_מייצר_לא_חוקי_לנגדי(_צבע,_מצב,_משבצת,0).


%%===============================================================================

%% מהלך של ניצחון
%% --------------
ציון_מצב_לשחקן_לפי_בינה(3, _ , _, _מצב, 10000):-
    				בדוק_סוף_משחק(_מצב, _),!.



%% המהלך הכי פחות טוב ליריב הוא הכי טוב לי
%% -------------------------------------------------
ציון_מצב_לשחקן_לפי_בינה(3, _שחקן, _מהלך, _מצב, _ציון):-
				מצא_הכל(_מהלך_חוקי,מהלך_חוקי(_מצב,_מהלך_חוקי),_מהלכים_אפשריים),
				מספר_איברים(_מספר,_מהלכים_אפשריים),
				_ציון הוא  ( _מספר  * -1),!. 

