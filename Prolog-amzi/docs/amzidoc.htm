<HTML>
<HEAD>
   <META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=iso-8859-1">
   <META NAME="GENERATOR" CONTENT="Mozilla/4.04 [en] (Win95; U) [Netscape]">
   <TITLE>Amzi! Documentation</TITLE>
</HEAD>
<BODY TEXT="#000000" BGCOLOR="#FFFFFF">

<H1>
<FONT COLOR="#D2AA00">Amzi! Documentation</FONT></H1>

<HR>

<P><A HREF="license.htm">License</A> -- Amzi! License Agreement.

<P><A HREF="install.htm">Install</A> -- Installation and setup instructions.

<P><A HREF="whatsnew.htm">News</A> -- What's new in this release, and conversion 
  issues for existing applications. 
<P><a href="platform_status.htm">Platform Status</a> -- What interfaces and samples 
  are available for each of the supported platforms.
<P><A HREF="aip/advfrtop.htm">Tutorial</A> -- The 'Adventure in Prolog' tutorial 
  is a pragmatic look at Prolog that uses an adventure game as the main teaching 
  example. It also walks you through an expert system, a classic genealogical 
  application, a customer order entry system and a natural language interface 
  using DCG. 
<P><A HREF="pro/prfrtop.htm">Prolog User's Guide &amp; Reference</A> --
How to use the IDE, listener, compiler, linker, runtime and a full Prolog
predicate reference. Also includes a quick overview of the system and a
quick tutorial on the Amzi! tools.

<P><A HREF="ls/lsfrtop.htm">Logic Server User's Guide &amp; Reference</A> -- How 
  to use the Logic Server API in general and details on supported environments 
  such as C, C++, Java, Visual Basic, Delphi, and Access. How to use and build 
  Logic Server Extension (LSXs). 
<P><a href="xsip/xsipfrtop.htm">Building Expert Systems in Prolog</a> -- An advanced 
  tutorial on how to build various expert systems in Prolog using frames, objects, 
  forward chaining, backward chaining, Rete algorithms and more.
<P><A HREF="errors.htm">Error Codes</A> -- A full list of Amzi! error codes.

<P><A HREF="samples.htm">Samples</A> -- A directory of Amzi! sample programs,
organized in a few different ways.

<P>Prolog Predicate Libraries -- Documentation is in the source code:
<UL>
<LI>
<A HREF="libs/list.htm">List Predicates</A> -- For manipulating lists.</LI>

<LI>
<A HREF="libs/bug.htm">Debugging Predicates</A> -- Provides a handy ? operator
that logs calls, fails, redos and exits.</LI>

<LI>
<A HREF="libs/misc.htm">Miscellaneous Predicates</A> -- Includes freeze,
melt, string comparison, and flag handling.</LI>
</UL>
Articles -- Helpful articles from PC AI, Dr. Dobb's Journal, VB Tech Journal...
<UL>
<LI>
<A HREF="articles/profun.htm">Exploring Prolog</A>, PC AI Sep/Oct 93 --
Introduces Prolog by presenting various techniques and applications, including
an adventure game, object- oriented programming, animal identification
and tax form calculation.</LI>

<LI>
<A HREF="articles/prohood.htm">Prolog Under the Hood: An Honest Look</A>,
PC AI Sep/Oct 92 -- Examines the inner workings of Prolog, explaining backtracking
and unification.</LI>

<LI>
<A HREF="articles/prolog.htm">White Paper on Rules, Prolog and Logic Server
Technology</A> -- Provides an overview of what rules are, how they are
applied, and the features of the Prolog language that makes it ideal for
writing rules.</LI>

<LI>
<A HREF="articles/ruleeng.htm">Building Custom Rule Engines</A>, PC AI,
Mar/Apr 96 -- An introduction to the techniques used in building custom
rule engines in Prolog. Many small examples are provided as illustration.
The complete source code is in the <A HREF="samples.htm">Amzi! Prolog Samples</A>.</LI>

<LI>
<A HREF="articles/javaclas.htm">Java Meets Prolog for Advisors, Analysts
and Agents</A> PC AI, Nov/Dec 96 -- Encapsulating a Prolog engine in a
Java Class.</LI>

<LI>
<A HREF="articles/vbprolog.htm">Using Rules to Code the Heart and Soul
of VB Applications</A>, VB Tech Journal, Sep 95 -- An introduction to combining
Prolog and Visual Basic to implement an intelligent genealogical database.
See <A HREF="samples.htm">samples</A> for the code example used in this
article.</LI>

<LI>
<A HREF="articles/procpp.htm">Objects and Logic--C++ Meets Prolog</A>,
PC AI, May/Jun 95 -- A discussion of encapsulating Prolog code within C++
objects.</LI>

<LI>
<A HREF="articles/irqxs.htm">Extending C with Prolog</A>, Dr. Dobb's Journal,
Aug 94 -- An introduction on integrating C and Prolog, with some background
on Prolog that indicates which parts of an application are best coded in
Prolog, and which in C. Illustrated with a multimedia installation expert
system.</LI>

<LI>
<A HREF="articles/xircom.htm">Designing and Building a PC Card Installation
Expert</A>, Dr. Dobb's Journal, Aug 96 -- Gregg Weissman describes how
Xircom uses Amzi! and C/C++ to intelligently install their network and
modem cards.</LI>

<LI>
<A HREF="articles/accbb.htm">Scheduling the Atlantic Coast Conference Basketball
Games</A> -- Describes how Amzi! Prolog was used to create a perfectly
balanced schedule that meets fairness and television constraints for the
ACC.</LI>
</UL>
<p><IMG SRC="pro/sqrlgrey.gif" HEIGHT=119 WIDTH=90 ALIGN=BOTTOM></p>
<!-- #BeginLibraryItem "/Library/Copyright.lbi" --><p><i><font size=-1>Copyright &copy;1987-2000 Amzi! inc. All Rights Reserved.</font></i></p><!-- #EndLibraryItem --> 
<P><I></I> 
</BODY>
</HTML>
